version: '3'

services:
  nginx-api-gateway:
    image: nginx
    volumes: 
      - './nginx/nginx.conf:/etc/nginx/nginx.conf:ro'
    ports:
      - '8080:80'
  db:
    image: postgres:9.6
    restart: on-failure
    command: postgres -c max_connections=200 -c fsync=off -c synchronous_commit=off -c full_page_writes=off
    ports: 
      - '5555:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - db:/var/lib/postgresql/data
  core:
    build:
      context: ./packages/core
      dockerfile: Dockerfile
      target: development
      # args:
      #   BUILD_STAGE: dev
    # volumes:
    #   - ./packages/core:/usr/src/app
    depends_on:
      - nginx-api-gateway
      - app-db
    ports:
      - 3000:3000
  kafka:
    build:
      context: ./packages/kafka
      dockerfile: Dockerfile
      target: development
      # args:
      #   BUILD_STAGE: dev
    # volumes:
    #   - ./packages/kafka:/usr/src/app
    depends_on:
      - nginx-api-gateway
      - app-db
    ports:
      - 3001:3001

  # kafka-ui:
  #   container_name: kafka-ui
  #   image: provectuslabs/kafka-ui:latest
  #   ports:
  #     - '8080:8080'
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_CLUSTERS_0_NAME: local
  #     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
  #     KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
  #     KAFKA_CLUSTERS_0_JMXPORT: 9997

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:5.2.4
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - '2181:2181'


volumes:
  db: ~
